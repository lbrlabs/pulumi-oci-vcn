// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

import * as pulumiOci from "@pulumi/oci";

export class Vcn extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'oci-vcn:index:Vcn';

    /**
     * Returns true if the given object is an instance of Vcn.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Vcn {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Vcn.__pulumiType;
    }

    /**
     * The bucket resource.
     */
    public /*out*/ readonly vcn!: pulumi.Output<pulumiOci.Core.Vcn>;

    /**
     * Create a Vcn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VcnArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.cidrBlock === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cidrBlock'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            resourceInputs["cidrBlock"] = args ? args.cidrBlock : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["vcn"] = undefined /*out*/;
        } else {
            resourceInputs["vcn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Vcn.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a Vcn resource.
 */
export interface VcnArgs {
    /**
     * Cidr block to use for VCN
     */
    cidrBlock: string;
    /**
     * Compartment ID to deploy into
     */
    compartmentId: pulumi.Input<string>;
}
