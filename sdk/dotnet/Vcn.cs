// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.OciVcn
{
    [OciVcnResourceType("oci-vcn:index:Vcn")]
    public partial class Vcn : global::Pulumi.ComponentResource
    {
        /// <summary>
        /// The ID of the internet gateway.
        /// </summary>
        [Output("internetGatewayId")]
        public Output<string?> InternetGatewayId { get; private set; } = null!;

        /// <summary>
        /// The ID of the NAT gateway.
        /// </summary>
        [Output("natGatewayId")]
        public Output<string?> NatGatewayId { get; private set; } = null!;

        /// <summary>
        /// The IDs of the private subnets.
        /// </summary>
        [Output("privateSubnetIds")]
        public Output<ImmutableArray<string>> PrivateSubnetIds { get; private set; } = null!;

        /// <summary>
        /// The IDs of the public subnets.
        /// </summary>
        [Output("publicSubnetIds")]
        public Output<ImmutableArray<string>> PublicSubnetIds { get; private set; } = null!;

        /// <summary>
        /// The ID of the service gateway.
        /// </summary>
        [Output("serviceGatewayId")]
        public Output<string?> ServiceGatewayId { get; private set; } = null!;

        /// <summary>
        /// The ID of the VCN.
        /// </summary>
        [Output("vcnId")]
        public Output<string> VcnId { get; private set; } = null!;


        /// <summary>
        /// Create a Vcn resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Vcn(string name, VcnArgs args, ComponentResourceOptions? options = null)
            : base("oci-vcn:index:Vcn", name, args ?? new VcnArgs(), MakeResourceOptions(options, ""), remote: true)
        {
        }

        private static ComponentResourceOptions MakeResourceOptions(ComponentResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new ComponentResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = ComponentResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class VcnArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cidr block to use for VCN
        /// </summary>
        [Input("cidrBlock", required: true)]
        public string CidrBlock { get; set; } = null!;

        /// <summary>
        /// Compartment ID to deploy into
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("createInternetGateway")]
        public bool? CreateInternetGateway { get; set; }

        [Input("createNatGateway")]
        public bool? CreateNatGateway { get; set; }

        [Input("createServiceGateway")]
        public bool? CreateServiceGateway { get; set; }

        /// <summary>
        /// DNS labels for VCN
        /// </summary>
        [Input("dnsLabel")]
        public Input<string>? DnsLabel { get; set; }

        /// <summary>
        /// Enable ipv6 for VCN
        /// </summary>
        [Input("ipv6Enabled")]
        public Input<bool>? Ipv6Enabled { get; set; }

        /// <summary>
        /// Number of public and private subnets to create
        /// </summary>
        [Input("numberOfSubnets")]
        public double? NumberOfSubnets { get; set; }

        public VcnArgs()
        {
        }
        public static new VcnArgs Empty => new VcnArgs();
    }
}
